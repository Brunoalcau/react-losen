"use strict";function _interopDefault(t){return t&&"object"==typeof t&&"default"in t?t.default:t}var React=require("react"),log=_interopDefault(require("loglevel")),PropTypes=_interopDefault(require("prop-types"));const findLastValidStepIndex=(t,e=0)=>{let s=e;return t.slice(e).forEach((t,p)=>{t.autoSkip||(s=e+p)}),s},getSafeNext=(t,e,s)=>{const p=e.length,i="previous"===s?t-1:t+1;if(i<0)return 0;const r=findLastValidStepIndex(e);return r<i?r:i>=p?p-1:i};var _extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};function _asyncToGenerator(t){return function(){var e=t.apply(this,arguments);return new Promise(function(t,s){return function p(i,r){try{var n=e[i](r),o=n.value}catch(t){return void s(t)}if(!n.done)return Promise.resolve(o).then(function(t){p("next",t)},function(t){p("throw",t)});t(o)}("next")})}}const emptyStep={name:"",validator:()=>"",autoSkip:null};class Wizard extends React.Component{constructor(...t){var e;return e=super(...t),this.state={activeStep:emptyStep,activeStepIndex:0,direction:null,isFirstStep:!0,isLastStep:!1,steps:[],stepData:{}},this.stateDebugger=(()=>{this.props.debug&&log.debug("WIZARD STATE UPDATED",this.state)}),this.onPartialChange=(t=>e=>{const s="undefined"!==e?{[t]:e}:{};this.setState(t=>_extends({},t,{stepData:_extends({},t.stepData,s)}),this.stateDebugger)}),this.onComplete=(()=>{this.props.onComplete(this.state.stepData,this.state.activeStep.name)}),e}getChildContext(){var t,e=this;return{activeStep:this.state.activeStep,isFirstStep:this.state.isFirstStep,isLastStep:this.state.isLastStep,registerStep:(t,e,s)=>{this.setState(p=>_extends({},p,{activeStep:p.steps[0]||t,activeStepIndex:0,steps:[...p.steps,{name:t,validator:e,autoSkip:s}]}))},updateStep:(t,e)=>{const s=this.state.steps.findIndex(e=>e.name===t);this.setState(t=>({steps:[...t.steps.slice(0,s),_extends({},t.steps[s],e),...t.steps.slice(s+1)]}))},changeStep:(t=_asyncToGenerator(function*(t){const{activeStep:s,stepData:p,steps:i}=e.state,{onStepChange:r}=e.props;try{if("next"!==t&&"complete"!==t||"function"==typeof s.validator&&(yield s.validator()),"complete"===t)e.onComplete();else{const n=t||e.state.direction,o=getSafeNext(e.state.activeStepIndex,e.state.steps,n),a=s.name,c=i[o].name;r&&!i[o].autoSkip&&r({prevStepName:a,nextStepIndex:o,nextStepName:c,numSteps:i.length,stepData:p}),e.setState({activeStep:e.state.steps[o]||emptyStep,activeStepIndex:o,direction:n,isFirstStep:o<1,isLastStep:o===findLastValidStepIndex(e.state.steps,o)},e.stateDebugger)}}catch(t){e.props.onError&&e.props.onError(t)}}),function(e){return t.apply(this,arguments)})}}render(){return this.props.render(this.state.stepData,this.onPartialChange)}}Wizard.defaultProps={onStepChange:()=>{}},Wizard.childContextTypes={activeStep:PropTypes.shape({name:PropTypes.string.isRequired,validator:PropTypes.func}).isRequired,changeStep:PropTypes.func.isRequired,isFirstStep:PropTypes.bool.isRequired,isLastStep:PropTypes.bool.isRequired,registerStep:PropTypes.func.isRequired,updateStep:PropTypes.func.isRequired};class Step extends React.Component{componentDidMount(){this.context.registerStep(this.props.name,this.props.validator,this.props.autoSkip)}componentWillReceiveProps(t,e){e.activeStep.name===this.props.name&&this.props.autoSkip&&this.context.changeStep(),t.autoSkip!==this.props.autoSkip&&this.context.updateStep(this.props.name,{autoSkip:t.autoSkip})}render(){return this.context.activeStep.name===this.props.name?this.props.children:null}}Step.defaultProps={autoSkip:!1},Step.contextTypes={activeStep:PropTypes.shape({name:PropTypes.string.isRequired,validator:PropTypes.func}).isRequired,changeStep:PropTypes.func.isRequired,registerStep:PropTypes.func.isRequired,updateStep:PropTypes.func.isRequired};class Controls extends React.Component{constructor(...t){var e;return e=super(...t),this.changeStep=(t=>{this.context.changeStep(t)}),this.onNext=(()=>{this.context.isLastStep?this.context.changeStep("complete"):this.context.changeStep("next")}),this.onPrevious=(()=>{this.context.isFirstStep||this.context.changeStep("previous")}),e}render(){const{isFirstStep:t,isLastStep:e}=this.context;return this.props.render(this.onNext,this.onPrevious,t,e)}}Controls.contextTypes={changeStep:PropTypes.func.isRequired,isFirstStep:PropTypes.bool.isRequired,isLastStep:PropTypes.bool.isRequired};var entry={Wizard:Wizard,Step:Step,Controls:Controls};module.exports=entry;
